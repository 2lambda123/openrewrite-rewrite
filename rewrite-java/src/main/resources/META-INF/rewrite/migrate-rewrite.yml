#
# Copyright 2023 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.upgrade.MigrateToRewrite8
displayName: Migrate rewrite from 7 to 8
description: |
  Migrate rewrite recipe and test from version 7 to version 8.
  While most parts can be automatically migrated, there are some complex and open-ended scenarios that require manual attention.
  In those cases, this recipe will add a comment to the code and request a human to review and handle it manually.
  Reference : Migration guide (URL to be written).
recipeList:
  - org.openrewrite.java.recipes.MigrateRecipeToRewrite8
  - org.openrewrite.java.recipes.MigrateTestToRewrite8
  - org.openrewrite.java.recipes.MigrateMarkersSearchResult
  - org.openrewrite.java.recipes.RemoveApplicabilityTestFromYamlRecipe
  - org.openrewrite.java.recipes.MigrateJavaTemplateToRewrite8
  - org.openrewrite.java.upgrade.updateStaticAnalysisPackage
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.upgrade.updateStaticAnalysisPackage
displayName: update referencing package name for the recipes moved to `rewrite-static-analysis`
description: |
  Some recipes have been moved from `rewrite` to `rewrite-static-analysis`, so any referencing places should update the class package name accordingly.
recipeList:
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.AddSerialVersionUidToSerializable
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.AddSerialVersionUidToSerializable
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.AtomicPrimitiveEqualsUsesGet
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.AtomicPrimitiveEqualsUsesGet
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.AvoidBoxedBooleanExpressions
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.AvoidBoxedBooleanExpressions
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.BigDecimalRoundingConstantsToEnums
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.BigDecimalRoundingConstantsToEnums
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.BooleanChecksNotInverted
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.BooleanChecksNotInverted
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.CaseInsensitiveComparisonsDoNotChangeCase
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.CaseInsensitiveComparisonsDoNotChangeCase
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.CatchClauseOnlyRethrows
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.CatchClauseOnlyRethrows
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ChainStringBuilderAppendCalls
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ChainStringBuilderAppendCalls
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.CombineSemanticallyEqualCatchBlocks
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.CombineSemanticallyEqualCatchBlocks
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.CompareEnumsWithEqualityOperator
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.CompareEnumsWithEqualityOperator
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ControlFlowIndentation
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ControlFlowIndentation
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.CovariantEquals
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.CovariantEquals
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.DeclarationSiteTypeVariance
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.DeclarationSiteTypeVariance
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.DefaultComesLast
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.DefaultComesLast
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.EmptyBlock
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.EmptyBlock
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.EqualsAvoidsNull
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.EqualsAvoidsNull
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ExplicitCharsetOnStringGetBytes
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ExplicitCharsetOnStringGetBytes
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ExplicitInitialization
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ExplicitInitialization
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ExplicitLambdaArgumentTypes
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ExplicitLambdaArgumentTypes
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ExternalizableHasNoArgsConstructor
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ExternalizableHasNoArgsConstructor
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.FallThrough
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.FallThrough
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.FinalClass
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.FinalClass
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.FinalizeLocalVariables
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.FinalizeLocalVariables
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.FinalizeMethodArguments
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.FinalizeMethodArguments
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.FinalizePrivateFields
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.FinalizePrivateFields
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.FixStringFormatExpressions
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.FixStringFormatExpressions
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ForLoopControlVariablePostfixOperators
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ForLoopControlVariablePostfixOperators
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ForLoopIncrementInUpdate
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ForLoopIncrementInUpdate
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.HiddenField
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.HiddenField
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.HideUtilityClassConstructor
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.HideUtilityClassConstructor
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.IndexOfChecksShouldUseAStartPosition
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.IndexOfChecksShouldUseAStartPosition
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.IndexOfReplaceableByContains
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.IndexOfReplaceableByContains
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.IndexOfShouldNotCompareGreaterThanZero
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.IndexOfShouldNotCompareGreaterThanZero
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.InlineVariable
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.InlineVariable
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.InstanceOfPatternMatch
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.InstanceOfPatternMatch
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.IsEmptyCallOnCollections
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.IsEmptyCallOnCollections
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.LambdaBlockToExpression
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.LambdaBlockToExpression
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.LowercasePackage
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.LowercasePackage
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.MethodNameCasing
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.MethodNameCasing
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.MinimumSwitchCases
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.MinimumSwitchCases
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.MissingOverrideAnnotation
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.MissingOverrideAnnotation
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ModifierOrder
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ModifierOrder
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.MultipleVariableDeclarations
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.MultipleVariableDeclarations
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NeedBraces
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NeedBraces
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NestedEnumsAreNotStatic
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NestedEnumsAreNotStatic
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NewStringBuilderBufferWithCharArgument
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NewStringBuilderBufferWithCharArgument
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NoDoubleBraceInitialization
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NoDoubleBraceInitialization
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NoEmptyCollectionWithRawType
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NoEmptyCollectionWithRawType
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NoEqualityInForCondition
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NoEqualityInForCondition
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NoFinalizedLocalVariables
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NoFinalizedLocalVariables
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NoFinalizer
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NoFinalizer
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NoPrimitiveWrappersForToStringOrCompareTo
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NoPrimitiveWrappersForToStringOrCompareTo
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NoRedundantJumpStatements
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NoRedundantJumpStatements
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NoToStringOnStringType
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NoToStringOnStringType
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.NoValueOfOnStringType
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.NoValueOfOnStringType
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ObjectFinalizeCallsSuper
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ObjectFinalizeCallsSuper
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.OperatorWrap
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.OperatorWrap
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.PrimitiveWrapperClassConstructorToValueOf
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.PrimitiveWrapperClassConstructorToValueOf
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RedundantFileCreation
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RedundantFileCreation
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReferentialEqualityToObjectEquals
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReferentialEqualityToObjectEquals
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveCallsToObjectFinalize
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveCallsToObjectFinalize
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveCallsToSystemGc
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveCallsToSystemGc
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveEmptyJavaDocParameters
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveEmptyJavaDocParameters
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveInstanceOfPatternMatch
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveInstanceOfPatternMatch
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveJavaDocAuthorTag
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveJavaDocAuthorTag
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveRedundantTypeCast
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveRedundantTypeCast
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveSystemOutPrintln
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveSystemOutPrintln
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveUnneededAssertion
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveUnneededAssertion
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveUnneededBlock
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveUnneededBlock
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveUnusedLocalVariables
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveUnusedLocalVariables
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveUnusedPrivateFields
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveUnusedPrivateFields
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RemoveUnusedPrivateMethods
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RemoveUnusedPrivateMethods
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RenameExceptionInEmptyCatch
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RenameExceptionInEmptyCatch
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RenameLocalVariablesToCamelCase
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RenameLocalVariablesToCamelCase
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RenameMethodsNamedHashcodeEqualOrTostring
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RenameMethodsNamedHashcodeEqualOrTostring
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RenamePrivateFieldsToCamelCase
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RenamePrivateFieldsToCamelCase
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.RenameToCamelCase
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.RenameToCamelCase
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceDeprecatedRuntimeExecMethods
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceDeprecatedRuntimeExecMethods
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceDuplicateStringLiterals
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceDuplicateStringLiterals
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceLambdaWithMethodReference
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceLambdaWithMethodReference
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceOptionalIsPresentWithIfPresent
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceOptionalIsPresentWithIfPresent
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceRedundantFormatWithPrintf
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceRedundantFormatWithPrintf
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceStackWithDeque
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceStackWithDeque
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceStreamToListWithCollect
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceStreamToListWithCollect
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceStringBuilderWithString
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceStringBuilderWithString
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceTextBlockWithString
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceTextBlockWithString
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.ReplaceValidateNotNullHavingVarargsWithObjectsRequireNonNull
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.ReplaceValidateNotNullHavingVarargsWithObjectsRequireNonNull
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.SimplifyCompoundStatement
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.SimplifyCompoundStatement
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.SimplifyConsecutiveAssignments
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.SimplifyConsecutiveAssignments
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.SimplifyConstantIfBranchExecution
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.SimplifyConstantIfBranchExecution
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.SimplifyDurationCreationUnits
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.SimplifyDurationCreationUnits
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.StaticMethodNotFinal
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.StaticMethodNotFinal
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.StringLiteralEquality
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.StringLiteralEquality
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.TypecastParenPad
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.TypecastParenPad
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UnnecessaryCatch
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UnnecessaryCatch
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UnnecessaryCloseInTryWithResources
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UnnecessaryCloseInTryWithResources
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UnnecessaryExplicitTypeArguments
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UnnecessaryExplicitTypeArguments
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UnnecessaryPrimitiveAnnotations
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UnnecessaryPrimitiveAnnotations
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UnnecessaryThrows
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UnnecessaryThrows
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UnwrapRepeatableAnnotations
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UnwrapRepeatableAnnotations
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UpperCaseLiteralSuffixes
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UpperCaseLiteralSuffixes
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseAsBuilder
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseAsBuilder
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseCollectionInterfaces
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseCollectionInterfaces
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseDiamondOperator
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseDiamondOperator
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseForEachRemoveInsteadOfSetRemoveAll
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseForEachRemoveInsteadOfSetRemoveAll
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseJavaStyleArrayDeclarations
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseJavaStyleArrayDeclarations
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseLambdaForFunctionalInterface
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseLambdaForFunctionalInterface
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseObjectNotifyAll
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseObjectNotifyAll
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseStandardCharset
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseStandardCharset
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseStringReplace
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseStringReplace
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.UseSystemLineSeparator
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.UseSystemLineSeparator
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.WhileInsteadOfFor
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.WhileInsteadOfFor
  - org.openrewrite.java.recipes.UpdateMovedPackageClassName:
      fullyQualifiedClassNameMovedFrom: org.openrewrite.java.cleanup.WriteOctalValuesAsDecimal
      fullyQualifiedClassNameMovedTo: org.openrewrite.staticanalysis.WriteOctalValuesAsDecimal