plugins {
    id "com.github.johnrengelman.plugin-shadow" version "2.0.3"
}

configurations {
    compile.extendsFrom compileShaded
}

// run manually with -x compileKotlin when you need to regenerate
task generateAntlrSources(type: JavaExec) {
    main = 'org.antlr.v4.Tool'

    args = [
            '-o', 'src/main/java/com/netflix/rewrite/grammar',
            '-package', 'com.netflix.rewrite.grammar',
            '-visitor'
    ] + project.fileTree(dir: 'src/main/antlr', include: '**/*.g4').collect { it.path }

    classpath = sourceSets.main.runtimeClasspath
}

dependencies {
    compileShaded files("${System.getProperty('java.home')}/../lib/tools.jar")
    compileShaded 'org.eclipse.jgit:org.eclipse.jgit:4.4.1.201607150455-r'
    compileShaded 'org.antlr:antlr4:4.7'

    compile 'eu.infomas:annotation-detector:latest.release'
    compile 'org.slf4j:slf4j-api:1.7.+'
    compile 'commons-lang:commons-lang:2.6'
    compile 'org.jetbrains.kotlin:kotlin-reflect'

    compile 'com.koloboke:koloboke-api-jdk8:latest.release'
    compile 'com.koloboke:koloboke-impl-jdk8:latest.release'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.7', optional

    // To avoid "warning: unknown enum constant JsonTypeInfo$As.PROPERTY" type warnings
    // when using rewrite but not needing serialization functionality. We pick an old version
    // of this library so that if the user depends on an older version of Jackson, we don't 
    // inadvertently upgrade their version.
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.0.0'

    compile 'org.ow2.asm:asm:latest.release'
    compile 'org.ow2.asm:asm-util:latest.release'

    testCompile 'junit:junit:4.+'
    testCompile 'ch.qos.logback:logback-classic:1.0.13'
    testCompile 'org.assertj:assertj-core:latest.release'
}

tasks.withType(Javadoc) {
    // generated ANTLR sources violate doclint
    options.addStringOption('Xdoclint:none', '-quiet')
}

// Replaces the main artifact by removing the classifier for the shadow jar, and replacing jar with shadowJar
// Relocated dependencies are removed from the generated pom
shadowJar {
    configurations = [project.configurations.compileShaded]
    classifier = 'jdkbundle'

    exclude 'sun/**/*'
    exclude 'org/relaxng/**/*'
    exclude 'META-INF/services/*'
    exclude 'com/sun/xml/**/*'
    exclude 'com/sun/jarsigner/**/*'
    exclude 'com/sun/javadoc/**/*'
    exclude 'com/sun/istack/**/*'
    exclude 'com/sun/xml/**/*'

    relocate 'com.sun', 'com.netflix.devinsight.shaded.com.sun'
    relocate 'org.eclipse.jgit', 'com.netflix.devinsight.shaded.org.eclipse.jgit'
    relocate 'org.apache.http', 'com.netflix.devinsight.shaded.org.apache.http'
    relocate 'org.antlr.v4', 'com.netflix.devinsight.shaded.org.antlr4.v4'

    mergeServiceFiles {
        exclude 'META-INF/services/com.sun.*'
    }
}

publishing {
    publications {
        nebula(MavenPublication) {
            artifact shadowJar {
                classifier = 'jdkbundle'
            }
        }
    }
}

